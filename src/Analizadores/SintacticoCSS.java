
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java.util.*;
import java_cup.runtime.Symbol;
import Views.*;
import Entorno.Simbolo.EnumTipoDato;
import Entorno.Simbolo.TipoOperador;
import Expresion.*;
import Sentecia.*;
import Entorno.Simbolo;
import Datos.*;
import IntruccionHTML.*;
import Datos.Atributo.TIPOOPERACION;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class SintacticoCSS extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Symc.class;
}

  /** Default constructor. */
  @Deprecated
  public SintacticoCSS() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public SintacticoCSS(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintacticoCSS(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\016\000\002\002\004\000\002\031\003\000\002\033" +
    "\006\000\002\033\002\000\002\034\004\000\002\034\003" +
    "\000\002\034\003\000\002\035\006\000\002\035\006\000" +
    "\002\035\006\000\002\030\003\000\002\030\003\000\002" +
    "\030\003\000\002\030\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\033\000\006\002\ufffe\016\006\001\002\000\004\002" +
    "\035\001\002\000\004\002\000\001\002\000\004\026\007" +
    "\001\002\000\012\011\013\015\014\024\012\025\010\001" +
    "\002\000\004\006\032\001\002\000\012\011\030\015\014" +
    "\024\012\025\010\001\002\000\004\006\025\001\002\000" +
    "\012\011\ufffb\015\ufffb\024\ufffb\025\ufffb\001\002\000\004" +
    "\004\016\001\002\000\012\011\ufffc\015\ufffc\024\ufffc\025" +
    "\ufffc\001\002\000\012\013\020\016\022\020\021\021\023" +
    "\001\002\000\004\010\024\001\002\000\004\010\ufff5\001" +
    "\002\000\004\010\ufff7\001\002\000\004\010\ufff6\001\002" +
    "\000\004\010\ufff4\001\002\000\012\011\ufffa\015\ufffa\024" +
    "\ufffa\025\ufffa\001\002\000\012\013\020\016\022\020\021" +
    "\021\023\001\002\000\004\010\027\001\002\000\012\011" +
    "\ufff8\015\ufff8\024\ufff8\025\ufff8\001\002\000\004\002\uffff" +
    "\001\002\000\012\011\ufffd\015\ufffd\024\ufffd\025\ufffd\001" +
    "\002\000\012\013\020\016\022\020\021\021\023\001\002" +
    "\000\004\010\034\001\002\000\012\011\ufff9\015\ufff9\024" +
    "\ufff9\025\ufff9\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\033\000\006\031\003\033\004\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\034\010" +
    "\035\014\001\001\000\002\001\001\000\004\035\030\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\016\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\030\025\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\032\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoCSS$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoCSS$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoCSS$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  
    /*public static LinkedList<AcepErr> TablaErr=new LinkedList<AcepErr>();*/

    //public Panel resultado;
    public LinkedList<Atributo> resultado = new LinkedList<>();
    

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado"));
        /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado");
            TablaErr.add(datos);
            */
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

       /*AcepErr datos =new AcepErr(lexema, "ERROR SINTACTICO" ,fila,columna,"Simbolo no esperado Error Fatal");
                   TablaErr.add(datos);
                  */
        //lista_errores.add(new ErrorT(lexema, fila, columna,"sintactico" ,"Simbolo no esperado, Panic Mode"));
    }

    public void semantic(Symbol cur_token, String n) 
    {
        System.out.println("error semantico ");
    }

    public void semantic(String msg, Object obj) {}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$SintacticoCSS$actions {




  private final SintacticoCSS parser;

  /** Constructor */
  CUP$SintacticoCSS$actions(SintacticoCSS parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$SintacticoCSS$do_action_part00000000(
    int                        CUP$SintacticoCSS$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoCSS$parser,
    java.util.Stack            CUP$SintacticoCSS$stack,
    int                        CUP$SintacticoCSS$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoCSS$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoCSS$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= LISTA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		LinkedList<Atributo> start_val = (LinkedList<Atributo>)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoCSS$parser.done_parsing();
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // LISTA ::= SNLISTAATRIBUTOS 
            {
              LinkedList<Atributo> RESULT =null;
		int lsleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int lsright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		LinkedList<Atributo> ls = (LinkedList<Atributo>)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		
            parser.resultado=ls;
        
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("LISTA",23, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // SNLISTAATRIBUTOS ::= tId tLlaveA LISTAATRIBUTOS tLlaveC 
            {
              LinkedList<Atributo> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		LinkedList<Atributo> a = (LinkedList<Atributo>)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		RESULT=a;
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("SNLISTAATRIBUTOS",25, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // SNLISTAATRIBUTOS ::= 
            {
              LinkedList<Atributo> RESULT =null;

              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("SNLISTAATRIBUTOS",25, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // LISTAATRIBUTOS ::= LISTAATRIBUTOS ATRIBUTO 
            {
              LinkedList<Atributo> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		LinkedList<Atributo> a = (LinkedList<Atributo>)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		Atributo b = (Atributo)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		
                    RESULT=a;
                    RESULT.add(b);
                
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("LISTAATRIBUTOS",26, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // LISTAATRIBUTOS ::= ATRIBUTO 
            {
              LinkedList<Atributo> RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		Atributo b = (Atributo)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		
                    RESULT = new LinkedList<>();
                    RESULT.add(b);
                
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("LISTAATRIBUTOS",26, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // LISTAATRIBUTOS ::= tLlaveC 
            {
              LinkedList<Atributo> RESULT =null;

              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("LISTAATRIBUTOS",26, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ATRIBUTO ::= tBorder tGuion E tPuntoComa 
            {
              Atributo RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		Expresion a = (Expresion)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		RESULT = new Atributo("border",a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("ATRIBUTO",27, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ATRIBUTO ::= tHight tDosPuntos E tPuntoComa 
            {
              Atributo RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		Expresion a = (Expresion)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		RESULT = new Atributo("height",a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("ATRIBUTO",27, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ATRIBUTO ::= tWidth tDosPuntos E tPuntoComa 
            {
              Atributo RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).right;
		Expresion a = (Expresion)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-1)).value;
		RESULT = new Atributo("width",a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("ATRIBUTO",27, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.elementAt(CUP$SintacticoCSS$top-3)), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // E ::= tEntero 
            {
              Expresion RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		RESULT=new Literal(Simbolo.EnumTipoDato.ENTERO, a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("E",22, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // E ::= tId 
            {
              Expresion RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		RESULT=new Id(a, aright, aleft);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("E",22, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // E ::= tCadena 
            {
              Expresion RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		RESULT=new Literal(Simbolo.EnumTipoDato.CADENA, a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("E",22, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // E ::= tCaracter 
            {
              Expresion RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoCSS$stack.peek()).value;
		RESULT=new Literal(Simbolo.EnumTipoDato.CARACTER, a);
              CUP$SintacticoCSS$result = parser.getSymbolFactory().newSymbol("E",22, ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintacticoCSS$stack.peek()), RESULT);
            }
          return CUP$SintacticoCSS$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$SintacticoCSS$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$SintacticoCSS$do_action(
    int                        CUP$SintacticoCSS$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoCSS$parser,
    java.util.Stack            CUP$SintacticoCSS$stack,
    int                        CUP$SintacticoCSS$top)
    throws java.lang.Exception
    {
              return CUP$SintacticoCSS$do_action_part00000000(
                               CUP$SintacticoCSS$act_num,
                               CUP$SintacticoCSS$parser,
                               CUP$SintacticoCSS$stack,
                               CUP$SintacticoCSS$top);
    }
}

}
